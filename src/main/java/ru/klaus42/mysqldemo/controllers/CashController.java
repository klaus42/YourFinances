package ru.klaus42.mysqldemo.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import ru.klaus42.mysqldemo.entity.Cash;
import ru.klaus42.mysqldemo.entity.Currency;
import ru.klaus42.mysqldemo.entity.User;
import ru.klaus42.mysqldemo.repository.CashRepository;
import ru.klaus42.mysqldemo.repository.CurrencyRepository;
import ru.klaus42.mysqldemo.repository.UserRepository;

import javax.validation.Valid;
import java.util.List;
import java.util.Set;

@Controller
public class CashController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private CashRepository cashRepository;

    @Autowired
    private CurrencyRepository currencyRepository;


    @GetMapping("/user/cash")
    public String getUserProfile(Model model, Authentication authentication) {

        User user = userRepository.findByUsername(authentication.getName());
        Set<Cash> cashList = user.getCash();
        Cash newCash = new Cash();

        List<Currency> currencyList = currencyRepository.findAllByOrderByDisplayNameAsc();

        if (user == null) return "notfound";


        model.addAttribute("user", user);
        model.addAttribute("cashList", cashList);
        model.addAttribute("cash", newCash);
        model.addAttribute("currency", currencyList);
        return "user/userprofile";
    }

    @PostMapping("/cash")
    public String userSubmit(@Valid Cash cash, Errors errors, Model model, Authentication authentication) {

        User user = userRepository.findByUsername(authentication.getName());

        Currency currency = currencyRepository.findByNameOrderByDisplayNameAsc(cash.getCurrency().getName());

        if (currency==null || (null != errors && errors.getErrorCount() > 0)) {
            model.addAttribute(user);
            model.addAttribute("cashList", user.getCash());
            return "user/userprofile";
        } else {
            cash.setUser(user);
            cash.setCurrency(currency);
            cashRepository.save(cash);
            return "redirect:user/cash";
        }
    }


}
